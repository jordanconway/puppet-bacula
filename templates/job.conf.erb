Job {
    Name             = <%= @name %>
    Type             = <%= @jobtype %>
    Client           = <%= @clientcert %>-fd
    FileSet          = <%= @fileset_real %>
    Pool             = <%= @pool %>
<% if @jobtype == "Restore" -%>
    Where            = /tmp/bacula-restores
    Messages         = Standard
<% elsif @jobtype == "Backup" -%>
    Full Backup Pool        = <%= scope.lookupvar('bacula::params::bacula_storage') %>-Pool-Full
    Differential Backup Pool        = <%= scope.lookupvar('bacula::params::bacula_storage') %>-Pool-Diff
    Incremental Backup Pool = <%= scope.lookupvar('bacula::params::bacula_storage') %>-Pool-Inc
<% end -%>
<% if @jobdef -%>
    JobDefs          = "<%= @jobdef %>"
<% end -%>
<% @runscript.each do |script| -%>
    RunScript {
      RunsWhen = <%= script.fetch('runs_when') %>
      FailJobOnError = <%= (script['fail_job_on_error'] != false) ? 'yes' : 'no' %>
      RunsOnSuccess = <%= (script['runs_on_success'] != false) ? 'yes' : 'no' %>
      RunsOnFailure = <%= script['runs_on_failure'] ? 'yes' : 'no' %>
      RunsOnClient = <%= script['runs_on_client'] ? 'yes' : 'no' %>
      Command = <%= script.fetch('command').inspect %>
    }
<% end -%>
    Accurate         = <%= @accurate %>
<% if @level -%>
    Level            = <%= @level %>
<% end -%>
<%= scope.function_template(['bacula/_job_reschedule.erb']) -%>
}

